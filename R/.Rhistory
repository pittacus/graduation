load(mtfn)
}
cl<-parallel::makeCluster(nbcore)
res<-parApply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){
return(PharmacoGx::connectivityScore(x=x,y=HDAC,method = "gsea",nperm = 100))
},cl=cl,HDAC=HDAC)
res<-parApply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x=x,y=HDAC,method = "gsea",nperm = 100))},cl=cl,HDAC=HDAC)
detectCores(logical = F)
nbcore <- 2
if(!file.exists(myfn)){
message("Be aware that computing sensitivity will take some time...")
cl<-parallel::makeCluster(nbcore)
res<-parApply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x=x,y=HDAC,method = "gsea",nperm = 100))},cl=cl,HDAC=HDAC)
stopCluster(cl)
rownames(res)<-c("Connectivity","P_Value")
res<-t(res)
save(res,file=myfn)
}else{
load(mtfn)
}
res<-parApply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x,HDAC,method = "gsea",nperm = 100))},cl=cl,HDAC=HDAC)
nbcore <- 4
myfn<-"CMAP_genes_HDAC_connectivity.RData"
if(!file.exists(myfn)){
message("Be aware that computing sensitivity will take some time...")
cl<-parallel::makeCluster(nbcore)
res<-parApply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x,HDAC,method = "gsea",nperm = 100))},cl=cl,HDAC=HDAC)
stopCluster(cl)
rownames(res)<-c("Connectivity","P_Value")
res<-t(res)
save(res,file=myfn)
}else{
load(mtfn)
}
myfn<-"CMAP_genes_HDAC_connectivity.RData"
if(!file.exists(myfn)){
message("Be aware that computing sensitivity will take some time...")
cl<-parallel::makeCluster(nbcore)
res<-parApply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x,HDAC,method = "gsea",nperm = 100))},cl=cl,HDAC=HDAC)
stopCluster(cl)
rownames(res)<-c("Connectivity","P_Value")
res<-t(res)
save(res,file=myfn)
}else{
load(myfn)
}
options(stringsAsFactors = FALSE)
library(PharmacoGx)
library(VennDiagram)
library(RColorBrewer)
library(R.utils)
library(downloader)
library(gdata)
library(AnnotationDbi)
library(hgu133a.db)
library(gridExtra)
nbcore <- 4
perl<-"C:\\Users\\yuki\\Downloads\\mingw\\bin\\Perl\\bin\\perl.exe"
HDAC_up<-read.xls(paste(mydir,paste(mydir,"sigS1.xls",sep="_"),sep="/"),sheet = 1,header=FALSE,as.is=TRUE,perl = perl)
HDAC_down<-read.xls(paste(mydir,paste(mydir,"sigS1.xls",sep="_"),sep="/"),sheet = 2,header=FALSE,as.is=TRUE,perl = perl)
HDAC<-as.data.frame(matrix(NA,nrow = nrow(HDAC_down)+nrow(HDAC_up),ncol = 2))
annot<-AnnotationDbi::select(hgu133a.db,keys = c(HDAC_up[[1]],HDAC_down[[1]]),columns = c("ENTREZID"),keytype = "PROBEID")
gene_up<-unique(annot[match(HDAC_up[[1]],annot[,1]),2])
gene_down<-na.omit(unique(annot[match(HDAC_down[[1]],annot[,1]),2]))
HDAC_genes<-as.data.frame(matrix(NA,nrow = length(gene_down)+length(gene_up),ncol = 2))
HDAC_genes[,1]<-paste("geneid",c(gene_up,gene_down),sep = ".")
HDAC_genes[,2]<-c(rep(1,times=length(gene_up)),rep(-1,times=length(gene_down)))
rownames(HDAC_genes)<-HDAC_genes[ ,1]
HDAC<-HDAC_genes[ ,2]
names(HDAC)<-rownames(HDAC_genes)
drug.perturbation<-PharmacoGx::downloadPertSig("CMAP")
View(xx)
view(drug.perturbation[ , ,c("tstat","fdr")])
myfn<-"CMAP_genes_HDAC_connectivity.RData"
if(!file.exists(myfn)){
message("Be aware that computing sensitivity will take some time...")
cl<-parallel::makeCluster(nbcore)
res<-parApply(cl=cl,drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x,HDAC,method = "gsea",nperm = 100))},HDAC=HDAC)
stopCluster(cl)
rownames(res)<-c("Connectivity","P_Value")
res<-t(res)
save(res,file=myfn)
}else{
load(myfn)
}
library(parallel)
detectCores(logical = F)
cl <- makeCluster(getOption("cl.cores", 4))
view(cl)
View(cl)
options(stringsAsFactors = FALSE)
library(PharmacoGx)
library(VennDiagram)
library(RColorBrewer)
library(R.utils)
library(downloader)
library(gdata)
library(AnnotationDbi)
library(hgu133a.db)
library(gridExtra)
nbcore <- 4
HDAC_up<-read.xls(paste(mydir,paste(mydir,"sigS1.xls",sep="_"),sep="/"),sheet = 1,header=FALSE,as.is=TRUE,perl = perl)
HDAC_down<-read.xls(paste(mydir,paste(mydir,"sigS1.xls",sep="_"),sep="/"),sheet = 2,header=FALSE,as.is=TRUE,perl = perl)
HDAC<-as.data.frame(matrix(NA,nrow = nrow(HDAC_down)+nrow(HDAC_up),ncol = 2))
annot<-AnnotationDbi::select(hgu133a.db,keys = c(HDAC_up[[1]],HDAC_down[[1]]),columns = c("ENTREZID"),keytype = "PROBEID")
gene_up<-unique(annot[match(HDAC_up[[1]],annot[,1]),2])
gene_down<-na.omit(unique(annot[match(HDAC_down[[1]],annot[,1]),2]))
HDAC_genes<-as.data.frame(matrix(NA,nrow = length(gene_down)+length(gene_up),ncol = 2))
HDAC_genes[,1]<-paste("geneid",c(gene_up,gene_down),sep = ".")
HDAC_genes[,2]<-c(rep(1,times=length(gene_up)),rep(-1,times=length(gene_down)))
rownames(HDAC_genes)<-HDAC_genes[ ,1]
HDAC<-HDAC_genes[ ,2]
names(HDAC)<-rownames(HDAC_genes)
myfn<-"CMAP_genes_HDAC_connectivity.RData"
if(!file.exists(myfn)){
message("Be aware that computing sensitivity will take some time...")
cl<-parallel::makeCluster(nbcore)
res<-parApply(cl=cl,drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x,HDAC,method = "gsea",nperm = 100))},HDAC=HDAC)
stopCluster(cl)
rownames(res)<-c("Connectivity","P_Value")
res<-t(res)
save(res,file=myfn)
}else{
load(myfn)
}
detectCores()
class(drug.perturbation)
class(myfn)
##download/compute drug perturbation signatures from CMAP
drug.perturbation<-PharmacoGx::downloadPertSig("CMAP")
#  cl<-parallel::makeCluster(nbcore)
res<-apply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x=x,y=HDAC,method = "gsea",nperm = 100))},HDAC=HDAC)
drug.perturbation[ , ,c("tstat","fdr")]
rownames(drug.perturbation[ , ,c("tstat","fdr")])
rownames(HDAC)
View(HDAC_genes)
View(HDAC_down)
View(HDAC_up)
View(HDAC_genes)
View(annot)
HDAC[,2]<-HDAC_genes[ ,2]
HDAC<-as.data.frame(matrix(NA,nrow = nrow(HDAC_down)+nrow(HDAC_up),ncol = 2))
View(HDAC)
HDAC[,2]<-HDAC_genes[ ,2]
HDAC<-HDAC_genes[ ,2]
names(HDAC)<-rownames(HDAC_genes)
rownames(HDAC)<-rownames(HDAC_genes)
#  cl<-parallel::makeCluster(nbcore)
res<-apply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x=x,y=HDAC,method = "gsea",nperm = 100))},HDAC=HDAC_genes)
rownames(HDAC)
rownames(y)
View(annot)
res<-apply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){
return(PharmacoGx::connectivityScore(x=x,y=HDAC,method = "gsea",nperm = 100))},HDAC=HDAC)
rownames(x)
rownames(y)
rownames(drug.perturbation[ , ,c("tstat","fdr")])
rownames(drug.perturbation[ , ,c("tstat","fdr")])
res<-apply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){
rownames(x)<-x[,1]
rownames(y)<-names(HDAC)
return(PharmacoGx::connectivityScore(x=x,y=HDAC,method = "gsea",nperm = 100))},HDAC=HDAC)
HDAC_inhibitors<-c("vorinostat","trichostatin_A","HC_toxin","valproic_acid")
res<-res[order(res[,1],decreasing = T),]
drug.perturbation[,2]
ID<-c(1,2,3,4)
name<-c("A","B","C","D")
score<-c(60,70,80,90)
sex<-c("M","F","M","M")
student1<-data.frame(ID,name)
student2<-data.frame(score,sex)
total_student2<-cbind(student1,student2)
total_student2
View(total_student2)
View(connectivityScore)
a<-1:5
as.matrix(a)
class(a)
class(a)
a[,2]
a[2]
view(a)
show(a)
class(a)
rownames(a)
a<-1:5
as.matrix(a)
class(a)
rownames(a)
View(connectivityScore)
rownames(drug.perturbation[ , ,c("tstat","fdr")])
names(drug.perturbation[ , ,c("tstat","fdr")])
install.packages("IRkernel")
IRkernel::installspec()
IRkernel::installspec()
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
IRkernel::installspec(user = FALSE)
IRkernel::installspec()
IRkernel::installspec(name = 'ir35',displayname = 'R 3.5')
Sys.getenv("PATH")
HDAC_up<-read.xls(paste(mydir,paste(mydir,"sigS1.xls",sep="_"),sep="/"),sheet = 1,header=FALSE,as.is=TRUE,perl = perl)
options(stringsAsFactors = FALSE)
library(PharmacoGx)
library(VennDiagram)
library(RColorBrewer)
library(R.utils)
library(downloader)
library(gdata)
library(AnnotationDbi)
library(hgu133a.db)
library(gridExtra)
nbcore <- 4
#download and process HDAC signature
mydir <- "1132939s"
if(!file.exists(mydir)){
downloader::download(paste("http://sciencemag.org/content/suppl/2006/09/29/313.5795.1929.DC1/",
mydir,".zip",sep=""),destfile=paste(mydir,".zip",sep=""))
unzip(paste(mydir,".zip",sep=""))
}
perl<-"C:\\Users\\yuki\\Downloads\\mingw\\bin\\Perl\\bin\\perl.exe"
HDAC_up<-read.xls(paste(mydir,paste(mydir,"sigS1.xls",sep="_"),sep="/"),sheet = 1,header=FALSE,as.is=TRUE,perl = perl)
HDAC_down<-read.xls(paste(mydir,paste(mydir,"sigS1.xls",sep="_"),sep="/"),sheet = 2,header=FALSE,as.is=TRUE,perl = perl)
HDAC<-as.data.frame(matrix(NA,nrow = nrow(HDAC_down)+nrow(HDAC_up),ncol = 2))
annot<-AnnotationDbi::select(hgu133a.db,keys = c(HDAC_up[[1]],HDAC_down[[1]]),columns = c("ENTREZID"),keytype = "PROBEID")
gene_up<-unique(annot[match(HDAC_up[[1]],annot[,1]),2])
gene_down<-na.omit(unique(annot[match(HDAC_down[[1]],annot[,1]),2]))
HDAC_genes<-as.data.frame(matrix(NA,nrow = length(gene_down)+length(gene_up),ncol = 2))
View(HDAC_genes)
HDAC_genes[,1]<-paste("geneid",c(gene_up,gene_down),sep = ".")
HDAC_genes[,2]<-c(rep(1,times=length(gene_up)),rep(-1,times=length(gene_down)))
View(HDAC)
rownames(HDAC_genes)<-HDAC_genes[ ,1]
HDAC[,1]<-HDAC_genes[ ,2]
HDAC<-HDAC_genes[ ,2]
names(HDAC)<-rownames(HDAC_genes)
m<-as.matrix(HDAC)
View(m)
rownames(m)
myfn<-"CMAP_genes_HDAC_connectivity.RData"
if(!file.exists(myfn)){
message("Be aware that computing sensitivity will take some time...")
cl<-parallel::makeCluster(nbcore)
res<-parApply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x=x,y=HDAC,method = "gsea",nperm = 100))},cl=cl,HDAC=HDAC)
stopCluster(cl)
rownames(res)<-c("Connectivity","P_Value")
res<-t(res)
save(res,file=myfn)
}else{
load(myfn)
}
rownames(drug.perturbation[ , ,c("tstat","fdr")])
install.packages('IRkernel')
IRkernel::installspec()
Sys.getenv("PATH")
IRkernel::installspec()
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.getenv("PATH")
IRkernel::installspec()
IRkernel::installspec()
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.getenv("PATH")
IRkernel::installspec()
BiocManager::install("biamaRt",version = "3.8")
source("http://bioconductor.org/biocLite.R")
BiocManager::install("biomaRt",version = "3.8")
BiocManager::install('PharmacoGx',version = '3.8')
BiocManager::install('PharmacoGx',version = '3.8')
library(biomaRt)
install.packages('rlang')
library(biomaRt)
library(PharmacoGx)
listMarts()
View(HDAC_up)
View(HDAC_down)
View(annot)
gene_up<-unique(annot[match(HDAC_up[[1]],annot[,1]),2])
entrzID=c(gene_up,gene_down)
genesymbol<-getBM(attributes = c("entrezgene","hgnc_symbol","ensembl_gene_id"),filters = "entrezgene",values = entrzID,mart = ensembl)
ensembl<-useMart("ensembl",dataset = "hsapiens_gene_ensembl")
View(ensembl)
genesymbol<-getBM(attributes = c("entrezgene","hgnc_symbol","ensembl_gene_id"),filters = "entrezgene",values = entrzID,mart = ensembl)
View(genesymbol)
HDAC_genes[,1]<-paste(c(gene_up,gene_down),"at",sep = "_")
HDAC_genes[,2]<-c(rep(1,times=length(gene_up)),rep(-1,times=length(gene_down)))
rownames(HDAC_genes)<-HDAC_genes[ ,1]
View(HDAC_genes)
View(genesymbol)
HDAC_genes[,1]<-paste(genesymbol[,3],"at",sep = "_")
HDAC_genes[,2]<-c(rep(1,times=length(gene_up)),rep(-1,times=length(gene_down)))
rownames(HDAC_genes)<-HDAC_genes[ ,1]
HDAC<-HDAC_genes[ ,2]
names(HDAC)<-rownames(HDAC_genes)
myfn<-"CMAP_genes_HDAC_connectivity.RData"
if(!file.exists(myfn)){
message("Be aware that computing sensitivity will take some time...")
cl<-parallel::makeCluster(nbcore)
res<-parApply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x=x,y=HDAC,method = "gsea",nperm = 100))},cl=cl,HDAC=HDAC)
stopCluster(cl)
rownames(res)<-c("Connectivity","P_Value")
res<-t(res)
save(res,file=myfn)
}else{
load(myfn)
}
options(stringsAsFactors = FALSE)
library(PharmacoGx)
library(VennDiagram)
library(RColorBrewer)
library(R.utils)
library(downloader)
library(gdata)
library(AnnotationDbi)
library(hgu133a.db)
library(gridExtra)
library(biomaRt)
nbcore <- 4
if(!file.exists(myfn)){
message("Be aware that computing sensitivity will take some time...")
cl<-parallel::makeCluster(nbcore)
res<-parApply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x=x,y=HDAC,method = "gsea",nperm = 100))},cl=cl,HDAC=HDAC)
stopCluster(cl)
rownames(res)<-c("Connectivity","P_Value")
res<-t(res)
save(res,file=myfn)
}else{
load(myfn)
}
install.packages("MASS")
library(PharmacoGx)
install.packages("MASS")
install.packages("MASS")
library(PharmacoGx)
if(!file.exists(myfn)){
message("Be aware that computing sensitivity will take some time...")
cl<-parallel::makeCluster(nbcore)
res<-parApply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x=x,y=HDAC,method = "gsea",nperm = 100))},cl=cl,HDAC=HDAC)
stopCluster(cl)
rownames(res)<-c("Connectivity","P_Value")
res<-t(res)
save(res,file=myfn)
}else{
load(myfn)
}
options(stringsAsFactors = FALSE)
library(PharmacoGx)
library(VennDiagram)
library(RColorBrewer)
library(R.utils)
library(downloader)
library(gdata)
library(AnnotationDbi)
library(hgu133a.db)
library(gridExtra)
library(biomaRt)
nbcore <- 4
if(!file.exists(myfn)){
message("Be aware that computing sensitivity will take some time...")
cl<-parallel::makeCluster(nbcore)
res<-parApply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x=x,y=HDAC,method = "gsea",nperm = 100))},cl=cl,HDAC=HDAC)
stopCluster(cl)
rownames(res)<-c("Connectivity","P_Value")
res<-t(res)
save(res,file=myfn)
}else{
load(myfn)
}
View(cl)
View(res)
HDAC_inhibitors<-c("vorinostat","trichostatin_A","HC_toxin","valproic_acid")
res<-res[order(res[,1],decreasing = T),]
my_ranks<-which(rownames(res) %n% HDAC_inhibitors)
my_ranks<-which(rownames(res) %in% HDAC_inhibitors)
total<-dim(drug.perturbation)[2]
ranks<-my_ranks
positions<-total-ranks+1
pdf("CMAP_Case_Study_all_drugs.pdf")
plot.new()
rect(0,0,.2,1,col = "lightgrey",border = FALSE)
for (position in positions) {
rect(0,1/total*(position),.2,1/total*(position-1),col = "red",border = FALSE)
}
position=total-50
rect(0,1/total*(position),.2,1/total*(position),col = "black")
dev.off()
total<-50
ranks<-my_ranks
positions<-total-ranks+1
pdf("CMAP_Case_Study_all_drugs_top_50.pdf")
plot.new()
rect(0,0,1,1,col = "lightgery",border = FALSE)
rect(0,0,1,1,col = "lightgrey",border = FALSE)
for (position in positions) {
rect(0,1/total*(position),1,1/total*(position-1),col = "red",border = FALSE)
}
dev.off()
drugs_v1<-unique(read.xls(paste(mydir,paste(mydir,"tableS1.xls",sep = "_"),sep = "/"),sheet = 1,stringsAsFactors=FALSE)[,"cmap_name"])
drugs_v1<-drugs_v1[!drugs_v1%in%c("",NA)]
int_drugs<-intersect(drugs_v1,rownames(res))
res_v1<-res[int_drugs]
res_v1<-res_v1[order(res_v1[,1],decreasing = T),]
res_v1<-res[int_drugs]
res_v1<-res[int_drugs,]
res_v1<-res_v1[order(res_v1[,1],decreasing = T),]
colnames(res_v1)<-c("Connectivity","P_Value")
my_ranks<-which(rownames(res_v1)%in%HDAC_inhibitors)
total<-nrow(res_v1)
ranks<-my_ranks
positions<-total-ranks+1
pdf("CMAP_Case_Study_v1_drugs.pdf")
plot.new()
rect(0,0,.2,1,col = "lightgrey",border = FALSE)
for (position in positions) {
rect(0,1/total*(position),.2,1/total*(position-1),col = "red",border = FALSE)
}
dev.off()
pdf("HDAC_res_table.pdf")
grid.table(res[1:20, ],seperator=NA)
grid.table(res[1:20, ])
dev.off()
pdf("HDAC_res_v1_table.pdf")
grid.table(res_v1[1:20, ],seperator=NA)
grid.table(res_v1[1:20, ])
dev.off()
View(res)
my_ranks<-which(rownames(res) %in% HDAC_inhibitors)
a<-res[HDAC_inhibitors,]
res_v1<-res[int_drugs,]
View(res_v1)
View(connectivityScore)
View(res)
if(!file.exists(myfn)){
message("Be aware that computing sensitivity will take some time...")
cl<-parallel::makeCluster(nbcore)
res<-parApply(drug.perturbation[ , ,c("tstat","fdr")],2,function(x,HDAC){return(PharmacoGx::connectivityScore(x=x,y=HDAC,method = "gsea",nperm = 100))},cl=cl,HDAC=HDAC)
stopCluster(cl)
rownames(res)<-c("Connectivity","P_Value")
res<-t(res)
save(res,file=myfn)
}else{
load(myfn)
}
HDAC_inhibitors<-c("vorinostat","trichostatin_A","HC_toxin","valproic_acid")
a<-res[HDAC_inhibitors,]
b<-res[HDAC_inhibitors,]
b<-res["HC_toxin",]
res<-res[order(res[,1],decreasing = T),]
my_ranks<-which(rownames(res) %in% HDAC_inhibitors)
which(rownames(res)="vorinostat")
res<-res[order(res[,1],decreasing = T),]
which(rownames(res)%in%"vorinostat")
which(rownames(res)%in%"trichostatin_A")
which(rownames(res)%in%"HC_toxin")
which(rownames(res)%in%"valproic_acid")
which(rownames(res)%in%"vorinostat")
total<-dim(drug.perturbation)[2]
##download/compute drug perturbation signatures from CMAP
drug.perturbation<-PharmacoGx::downloadPertSig("CMAP")
options(stringsAsFactors = FALSE)
library(PharmacoGx)
library(VennDiagram)
library(RColorBrewer)
library(R.utils)
library(downloader)
library(gdata)
library(AnnotationDbi)
library(hgu133a.db)
library(gridExtra)
library(biomaRt)
nbcore <- 4
mydir <- "1132939s"
if(!file.exists(mydir)){
downloader::download(paste("http://sciencemag.org/content/suppl/2006/09/29/313.5795.1929.DC1/",
mydir,".zip",sep=""),destfile=paste(mydir,".zip",sep=""))
unzip(paste(mydir,".zip",sep=""))
}
perl<-"C:\\Users\\yuki\\Downloads\\mingw\\bin\\Perl\\bin\\perl.exe"
HDAC_up<-read.xls(paste(mydir,paste(mydir,"sigS1.xls",sep="_"),sep="/"),sheet = 1,header=FALSE,as.is=TRUE,perl = perl)
#download and process HDAC signature
mydir <- "1132939s"
if(!file.exists(mydir)){
downloader::download(paste("http://sciencemag.org/content/suppl/2006/09/29/313.5795.1929.DC1/",
mydir,".zip",sep=""),destfile=paste(mydir,".zip",sep=""))
unzip(paste(mydir,".zip",sep=""))
}
perl<-"C:\\Users\\yuki\\Downloads\\mingw\\bin\\Perl\\bin\\perl.exe"
HDAC_up<-read.xls(paste(mydir,paste(mydir,"sigS1.xls",sep="_"),sep="/"),sheet = 1,header=FALSE,as.is=TRUE,perl = perl)
View(HDAC_up)
HDAC_down<-read.xls(paste(mydir,paste(mydir,"sigS1.xls",sep="_"),sep="/"),sheet = 2,header=FALSE,as.is=TRUE,perl = perl)
View(HDAC_down)
HDAC<-as.data.frame(matrix(NA,nrow = nrow(HDAC_down)+nrow(HDAC_up),ncol = 2))
annot<-AnnotationDbi::select(hgu133a.db,keys = c(HDAC_up[[1]],HDAC_down[[1]]),columns = c("ENTREZID"),keytype = "PROBEID")
gene_up<-unique(annot[match(HDAC_up[[1]],annot[,1]),2])
gene_down<-na.omit(unique(annot[match(HDAC_down[[1]],annot[,1]),2]))
HDAC_genes<-as.data.frame(matrix(NA,nrow = length(gene_down)+length(gene_up),ncol = 2))
ensembl<-useMart("ensembl",dataset = "hsapiens_gene_ensembl")
entrzID=c(gene_up,gene_down)
genesymbol<-getBM(attributes = c("entrezgene","hgnc_symbol","ensembl_gene_id"),filters = "entrezgene",values = entrzID,mart = ensembl)
View(genesymbol)
HDAC_genes[,1]<-paste(genesymbol[,3],"at",sep = "_")
HDAC_genes[,2]<-c(rep(1,times=length(gene_up)),rep(-1,times=length(gene_down)))
rownames(HDAC_genes)<-HDAC_genes[ ,1]
View(HDAC_genes)
HDAC<-HDAC_genes[ ,2]
names(HDAC)<-rownames(HDAC_genes)
##download/compute drug perturbation signatures from CMAP
drug.perturbation<-PharmacoGx::downloadPertSig("CMAP")
##download/compute drug perturbation signatures from CMAP
drug.perturbation<-PharmacoGx::downloadPertSig("CMAP")
##download/compute drug perturbation signatures from CMAP
drug.perturbation<-PharmacoGx::downloadPertSig("CMAP")
